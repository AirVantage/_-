#!/bin/sh
#
# $ ./underscore_to_lodash directory_with_js_to_refactor
#
# All JS is refactored: you must remove `node_modules` beforehand.
#

#
# Transparent transformations
#
# underscore(_.bind) -> lodash(_.bind)
# underscore(_.clone) -> lodash(_.clone)
# underscore(_.compact) -> lodash(_.compact)
# underscore(_.defaults) -> lodash(_.defaults)
# underscore(_.difference) -> lodash(_.difference)
# underscore(_.escape) -> lodash(_.escape)
# underscore(_.has) -> lodash(_.has)
# underscore(_.intersection) -> lodash(_.intersection)
# underscore(_.isArray) -> lodash(_.isArray)
# underscore(_.isBoolean) -> lodash(_.isBoolean)
# underscore(_.isElement) -> lodash(_.isElement)
# underscore(_.isEmpty) -> lodash(_.isEmpty)
# underscore(_.isEqual) -> lodash(_.isEqual)
# underscore(_.isNaN) -> lodash(_.isNaN)
# underscore(_.isNull) -> lodash(_.isNull)
# underscore(_.isNumber) -> lodash(_.isNumber)
# underscore(_.isObject) -> lodash(_.isObject)
# underscore(_.isString) -> lodash(_.isString)
# underscore(_.isUndefined) -> lodash(_.isUndefined)
# underscore(_.keys) -> lodash(_.keys)
# underscore(_.negate) -> lodash(_.negate)
# underscore(_.partial) -> lodash(_.partial)
# underscore(_.range) -> lodash(_.range)
# underscore(_.result) -> lodash(_.result)
# underscore(_.size) -> lodash(_.size)
# underscore(_.union) -> lodash(_.union)
# underscore(_.uniqueId) -> lodash(_.uniqueId)
# underscore(_.values) -> lodash(_.values)
# underscore(_.without) -> lodash(_.without)
#

DIRECTORY=`readlink -f $1`
if [ ! -d $DIRECTORY ] || [ -z $DIRECTORY ]; then
  echo "Single directory is mandatory"
  exit 1
fi

for rule in $( find rules -type f | sort )
do
  if $rule $DIRECTORY
  then
    echo "o: $rule"
  else
    echo "x: $rule"
  fi
done

exit 0

echo "$(tput setaf 1)"
echo "#                                   #"
echo "# Here are calls to handle MANUALLY #"
echo "#                                   #"
echo "$(tput setaf 0)"
grasp --only-matching --recursive --equery '_.chain(__)' $DIRECTORY
grasp --only-matching --recursive --equery '_(__)' $DIRECTORY

#
# Check if `grasp` missed some calls
#
for fn in \
  "_\.any"                                                          \
  "_\.capitalize"                                                   \
  "_\.contains"                                                     \
  "_\.each"                                                         \
  "_\.extend"                                                       \
  "_\.find"                                                         \
  "_\.findWhere"                                                    \
  "_\.first"                                                        \
  "_\.include("                                                     \
  "_\.max"         `# When last argument is a function -> _.maxBy`  \
  "_\.min"         `# When last argument is a function -> _.minBy`  \
  "_\.omit"        `# When last argument is a function -> _.omitBy` \
  "_\.padLeft"                                                      \
  "_\.pairs"                                                        \
  "_\.pluck"                                                        \
  "_\.rest"
do
  if grep --quiet --max-count=1 --recursive --exclude-dir=.git -e $fn $DIRECTORY
  then
    grep -rnH --color --exclude-dir=.git -e $fn $DIRECTORY
  fi
done
